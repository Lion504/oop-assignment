package dao;

import model.Transaction;
import util.JPAUtil;
import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityTransaction;

/**
 * TransactionDAO handles database operations for Transaction objects
 * This class is responsible for saving currency conversion transactions to the database
 */
public class TransactionDAO {

    /**
     * Save a transaction to the database
     * The transaction ID will be automatically generated by the database
     *
     * @param transaction The transaction to save
     * @throws RuntimeException if saving fails
     */
    public void saveTransaction(Transaction transaction) {
        EntityManager em = null;
        EntityTransaction tx = null;

        try {
            em = JPAUtil.getEntityManager();
            tx = em.getTransaction();

            tx.begin();

            // Persist the transaction - JPA will automatically save it
            em.persist(transaction);

            tx.commit();

            System.out.println("âœ“ Transaction saved successfully: " +
                             transaction.getSourceAmount() + " " +
                             transaction.getSourceCurrency().getCode() + " -> " +
                             transaction.getTargetAmount() + " " +
                             transaction.getTargetCurrency().getCode());

        } catch (Exception e) {
            if (tx != null && tx.isActive()) {
                tx.rollback();
                System.err.println("Transaction rolled back due to error");
            }
            System.err.println("Error saving transaction: " + e.getMessage());
            throw new RuntimeException("Failed to save transaction: " + e.getMessage(), e);

        } finally {
            if (em != null) {
                em.close();
            }
        }
    }

    /**
     * Test method to verify database connection works
     * @return true if database is accessible
     */
    public boolean testConnection() {
        try {
            EntityManager em = JPAUtil.getEntityManager();
            em.close();
            return true;
        } catch (Exception e) {
            System.err.println("TransactionDAO connection test failed: " + e.getMessage());
            return false;
        }
    }
}

